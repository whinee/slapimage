[tool.poetry]
# [DO NOT MODIFY] info start
readme = "docs/README.md"
name = "slapimage"
license = "MIT"
version = "0.0.0.0-alpha.0"
description = "This is for our family business. DON'T YOU DARE USE THIS!"
homepage = "https://slapimg.whinyaan.xyz"
repository = "https://github.com/whinee/slapimage"
documentation = "https://slapimg.whinyaan.xyz"
# info end

authors = [
    # [DO NOT MODIFY] main author start
    "Lyra <whinyaan@protonmail.com>",
    # main author end
]
maintainers = [
    # [DO NOT MODIFY] main maintainer start
    "Lyra <whinyaan@protonmail.com>",
    # main maintainer end
]

packages = [
# [DO NOT MODIFY] package include source start
    { include = "slapimage" }
# package include source end
]

classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities"
]
keywords = ["your", "keywords", "here"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.10,<4"

arrow = "^1.2.3"
httpx = "^0.24.0"
msgpack = "^1.0.5"
openpyxl = "^3.1.2"
pyyaml = "^6.0"
toml = "^0.10.2"
pillow = "^10.0.0"
whinesnips = {version = "0.0.0.0a3", allow-prereleases = true}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
rich = "^13.3.5"

black = "^23.3.0"
isort = "^5.12.0"
mako = "^1.2.4"
mdformat = "^0.7.16"
mdformat-frontmatter = "^2.0.1"
mdformat-footnote = "^0.1.1"
mdformat-gfm = "^0.3.5"
mdformat-shfmt = "^0.1.0"
mkdocs-redirects = "^1.2.0"
mypy = "^1.1.1"
no-implicit-optional = "^1.3"
panflute = "^2.3.0"
pdoc3 = "^0.10.0"
pypandoc = "^1.11"
pypandoc_binary = "^1.11"
python-frontmatter = "^1.0.0"
ruff = "^0.0.259"
pillow = "^10.0.0"
cairosvg = "^2.7.1"
mkdocs-material = {version = "^9.2.0b3", allow-prereleases = true}
twine = "^4.0.2"
python-inquirer = "^1.0.3"
inquirer = "^3.1.3"
toml = "^0.10.2"

[tool.mypy]
disable_error_code = ["import", "attr-defined", "no-untyped-call"]

[tool.ruff]
select = [
    "ANN",
    "B",
    "BLE",
    "C4",
    "C90",
    "COM",
    "D",
    # "DTZ",
    "E",
    "F",
    "I",
    "INP",
    "N",
    "PIE",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "UP"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "ANN",
    "B",
    "C4",
    "COM",
    "D",
    "E",
    "F",
    "I",
    "PIE",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "UP"
]
unfixable = []

ignore = [
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN201",
    "ANN202",
    "ANN401",
    "C901",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "D203",
    "D212",
    "D401",
    "D406",
    "D407",
    "D417",
    "E501",
    "I002",
    "N812",
    "N818",
    "RET503",
    "S101",
    "UP007",
    "UP032",
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "pyenv",
    "venv",
]

line-length = 88

target-version = "py311"

[tool.ruff.mccabe]
max-complexity = 5

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = false